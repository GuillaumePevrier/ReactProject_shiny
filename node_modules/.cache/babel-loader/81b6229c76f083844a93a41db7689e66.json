{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumepevrier/Projets/OpenclassRoom/Projet 6 - Cre\\u0301ez une application web de location immobilie\\u0300re avec React/Workflow/shiny-agency/src/pages/Survey/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport colors from '../../utils/style/colors';\nimport { Loader } from '../../utils/style/Atoms';\nimport { SurveyContext } from '../../utils/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = SurveyContainer;\nconst QuestionTitle = styled.h2`\n  text-decoration: underline;\n  text-decoration-color: ${colors.primary};\n`;\n_c2 = QuestionTitle;\nconst QuestionContent = styled.span`\n  margin: 30px;\n`;\n_c3 = QuestionContent;\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a {\n    color: black;\n  }\n  & a:first-of-type {\n    margin-right: 20px;\n  }\n`;\n_c4 = LinkWrapper;\nconst ReplyBox = styled.button`\n  border: none;\n  height: 100px;\n  width: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${colors.backgroundLight};\n  border-radius: 30px;\n  cursor: pointer;\n  box-shadow: ${props => props.isSelected ? `0px 0px 0px 2px ${colors.primary} inset` : 'none'};\n  &:first-child {\n    margin-right: 15px;\n  }\n  &:last-of-type {\n    margin-left: 15px;\n  }\n`;\n_c5 = ReplyBox;\nconst ReplyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n_c6 = ReplyWrapper;\n\nfunction Survey() {\n  _s();\n\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber);\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1;\n  const nextQuestionNumber = questionNumberInt + 1;\n  const [surveyData, setSurveyData] = useState({});\n  const [isDataLoading, setDataLoading] = useState(false);\n  const {\n    saveAnswers,\n    answers\n  } = useContext(SurveyContext);\n  const [error, setError] = useState(false);\n\n  function saveReply(answer) {\n    saveAnswers({\n      [questionNumber]: answer\n    });\n  }\n\n  useEffect(() => {\n    async function fetchSurvey() {\n      setDataLoading(true);\n\n      try {\n        const response = await fetch(`http://localhost:8000/survey`);\n        const {\n          surveyData\n        } = await response.json();\n        setSurveyData(surveyData);\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        setDataLoading(false);\n      }\n    }\n\n    fetchSurvey();\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Oups il y a eu un probl\\xE8me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(SurveyContainer, {\n    children: [/*#__PURE__*/_jsxDEV(QuestionTitle, {\n      children: [\"Question \", questionNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), isDataLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(QuestionContent, {\n      children: surveyData[questionNumber]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), answers && /*#__PURE__*/_jsxDEV(ReplyWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ReplyBox, {\n        onClick: () => saveReply(true),\n        isSelected: answers[questionNumber] === true,\n        children: \"Oui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReplyBox, {\n        onClick: () => saveReply(false),\n        isSelected: answers[questionNumber] === false,\n        children: \"Non\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LinkWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${prevQuestionNumber}`,\n        children: \"Pr\\xE9c\\xE9dent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), surveyData[questionNumberInt + 1] ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${nextQuestionNumber}`,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/results\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Survey, \"RG7giLzlzHhhNU0cRjNDRSBdVqA=\", false, function () {\n  return [useParams];\n});\n\n_c7 = Survey;\nexport default Survey;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SurveyContainer\");\n$RefreshReg$(_c2, \"QuestionTitle\");\n$RefreshReg$(_c3, \"QuestionContent\");\n$RefreshReg$(_c4, \"LinkWrapper\");\n$RefreshReg$(_c5, \"ReplyBox\");\n$RefreshReg$(_c6, \"ReplyWrapper\");\n$RefreshReg$(_c7, \"Survey\");","map":{"version":3,"sources":["/Users/guillaumepevrier/Projets/OpenclassRoom/Projet 6 - Créez une application web de location immobilière avec React/Workflow/shiny-agency/src/pages/Survey/index.jsx"],"names":["useState","useEffect","useContext","useParams","Link","styled","colors","Loader","SurveyContext","SurveyContainer","div","QuestionTitle","h2","primary","QuestionContent","span","LinkWrapper","ReplyBox","button","backgroundLight","props","isSelected","ReplyWrapper","Survey","questionNumber","questionNumberInt","parseInt","prevQuestionNumber","nextQuestionNumber","surveyData","setSurveyData","isDataLoading","setDataLoading","saveAnswers","answers","error","setError","saveReply","answer","fetchSurvey","response","fetch","json","err","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport colors from '../../utils/style/colors'\nimport { Loader } from '../../utils/style/Atoms'\nimport { SurveyContext } from '../../utils/context'\n\nconst SurveyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst QuestionTitle = styled.h2`\n  text-decoration: underline;\n  text-decoration-color: ${colors.primary};\n`\n\nconst QuestionContent = styled.span`\n  margin: 30px;\n`\n\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a {\n    color: black;\n  }\n  & a:first-of-type {\n    margin-right: 20px;\n  }\n`\n\nconst ReplyBox = styled.button`\n  border: none;\n  height: 100px;\n  width: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${colors.backgroundLight};\n  border-radius: 30px;\n  cursor: pointer;\n  box-shadow: ${(props) =>\n    props.isSelected ? `0px 0px 0px 2px ${colors.primary} inset` : 'none'};\n  &:first-child {\n    margin-right: 15px;\n  }\n  &:last-of-type {\n    margin-left: 15px;\n  }\n`\n\nconst ReplyWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nfunction Survey() {\n  const { questionNumber } = useParams()\n  const questionNumberInt = parseInt(questionNumber)\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1\n  const nextQuestionNumber = questionNumberInt + 1\n  const [surveyData, setSurveyData] = useState({})\n  const [isDataLoading, setDataLoading] = useState(false)\n  const { saveAnswers, answers } = useContext(SurveyContext)\n  const [error, setError] = useState(false)\n\n  function saveReply(answer) {\n    saveAnswers({ [questionNumber]: answer })\n  }\n\n  useEffect(() => {\n    async function fetchSurvey() {\n      setDataLoading(true)\n      try {\n        const response = await fetch(`http://localhost:8000/survey`)\n        const { surveyData } = await response.json()\n        setSurveyData(surveyData)\n      } catch (err) {\n        console.log(err)\n        setError(true)\n      } finally {\n        setDataLoading(false)\n      }\n    }\n    fetchSurvey()\n  }, [])\n\n  if (error) {\n    return <span>Oups il y a eu un problème</span>\n  }\n\n  return (\n    <SurveyContainer>\n      <QuestionTitle>Question {questionNumber}</QuestionTitle>\n      {isDataLoading ? (\n        <Loader />\n      ) : (\n        <QuestionContent>{surveyData[questionNumber]}</QuestionContent>\n      )}\n      {answers && (\n        <ReplyWrapper>\n          <ReplyBox\n            onClick={() => saveReply(true)}\n            isSelected={answers[questionNumber] === true}\n          >\n            Oui\n          </ReplyBox>\n          <ReplyBox\n            onClick={() => saveReply(false)}\n            isSelected={answers[questionNumber] === false}\n          >\n            Non\n          </ReplyBox>\n        </ReplyWrapper>\n      )}\n      <LinkWrapper>\n        <Link to={`/survey/${prevQuestionNumber}`}>Précédent</Link>\n        {surveyData[questionNumberInt + 1] ? (\n          <Link to={`/survey/${nextQuestionNumber}`}>Suivant</Link>\n        ) : (\n          <Link to=\"/results\">Résultats</Link>\n        )}\n      </LinkWrapper>\n    </SurveyContainer>\n  )\n}\n\nexport default Survey\n"]},"metadata":{},"sourceType":"module"}