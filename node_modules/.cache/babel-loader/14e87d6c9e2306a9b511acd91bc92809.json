{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumepevrier/Projets/OpenclassRoom/Projet 6 - Cre\\u0301ez une application web de location immobilie\\u0300re avec React/Workflow/shiny-agency/src/pages/Results/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { SurveyContext } from '../../utils/context';\nimport styled from 'styled-components';\nimport colors from '../../utils/style/colors';\nimport { useFetch, useTheme } from '../../utils/hooks';\nimport { StyledLink, Loader } from '../../utils/style/Atoms';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 60px 90px;\n  padding: 30px;\n  background-color: ${({\n  theme\n}) => theme === 'light' ? colors.backgroundLight : colors.backgroundDark};\n`;\n_c = ResultsContainer;\nconst ResultsTitle = styled.h2`\n  color: ${({\n  theme\n}) => theme === 'light' ? '#000000' : '#ffffff'};\n  font-weight: bold;\n  font-size: 28px;\n  max-width: 60%;\n  text-align: center;\n  & > span {\n    padding-left: 10px;\n  }\n`;\n_c2 = ResultsTitle;\nconst DescriptionWrapper = styled.div`\n  padding: 60px;\n`;\n_c3 = DescriptionWrapper;\nconst JobTitle = styled.span`\n  color: ${({\n  theme\n}) => theme === 'light' ? colors.primary : colors.backgroundLight};\n  text-transform: capitalize;\n`;\n_c4 = JobTitle;\nconst JobDescription = styled.div`\n  font-size: 18px;\n  & > p {\n    color: ${({\n  theme\n}) => theme === 'light' ? colors.secondary : '#ffffff'};\n    margin-block-start: 5px;\n  }\n  & > span {\n    font-size: 20px;\n  }\n`;\n_c5 = JobDescription;\nconst LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c6 = LoaderWrapper;\nexport function formatQueryParams(answers) {\n  const answerNumbers = Object.keys(answers);\n  return answerNumbers.reduce((previousParams, answerNumber, index) => {\n    const isFirstParam = index === 0;\n    const separator = isFirstParam ? '' : '&';\n    return `${previousParams}${separator}a${answerNumber}=${answers[answerNumber]}`;\n  }, '');\n}\nexport function formatJobList(title, listLength, index) {\n  if (index === listLength - 1) {\n    return title;\n  } else {\n    return `${title},`;\n  }\n}\n\nfunction Results() {\n  _s();\n\n  const {\n    theme\n  } = useTheme();\n  const {\n    answers\n  } = useContext(SurveyContext);\n  const queryParams = formatQueryParams(answers);\n  const {\n    data,\n    isLoading,\n    error\n  } = useFetch(`http://localhost:8000/results?${queryParams}`);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Il y a un probl\\xE8me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n\n  const resultsData = data === null || data === void 0 ? void 0 : data.resultsData;\n  return isLoading ? /*#__PURE__*/_jsxDEV(LoaderWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(ResultsContainer, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      theme: theme,\n      children: [\"Les comp\\xE9tences dont vous avez besoin :\", resultsData && resultsData.map((result, index) => /*#__PURE__*/_jsxDEV(JobTitle, {\n        theme: theme,\n        children: formatJobList(result.title, resultsData.length, index)\n      }, `result-title-${index}-${result.title}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n      $isFullLink: true,\n      to: \"/freelances\",\n      children: \"D\\xE9couvrez nos profils\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DescriptionWrapper, {\n      children: resultsData && resultsData.map((result, index) => /*#__PURE__*/_jsxDEV(JobDescription, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(JobTitle, {\n          theme: theme,\n          children: result.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, `result-detail-${index}-${result.title}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Results, \"xKrAnHTbGfQsMLoFWvjT3LZ6C28=\", false, function () {\n  return [useTheme, useFetch];\n});\n\n_c7 = Results;\nexport default Results;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ResultsContainer\");\n$RefreshReg$(_c2, \"ResultsTitle\");\n$RefreshReg$(_c3, \"DescriptionWrapper\");\n$RefreshReg$(_c4, \"JobTitle\");\n$RefreshReg$(_c5, \"JobDescription\");\n$RefreshReg$(_c6, \"LoaderWrapper\");\n$RefreshReg$(_c7, \"Results\");","map":{"version":3,"sources":["/Users/guillaumepevrier/Projets/OpenclassRoom/Projet 6 - Créez une application web de location immobilière avec React/Workflow/shiny-agency/src/pages/Results/index.jsx"],"names":["useContext","SurveyContext","styled","colors","useFetch","useTheme","StyledLink","Loader","ResultsContainer","div","theme","backgroundLight","backgroundDark","ResultsTitle","h2","DescriptionWrapper","JobTitle","span","primary","JobDescription","secondary","LoaderWrapper","formatQueryParams","answers","answerNumbers","Object","keys","reduce","previousParams","answerNumber","index","isFirstParam","separator","formatJobList","title","listLength","Results","queryParams","data","isLoading","error","resultsData","map","result","length","description"],"mappings":"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","sourcesContent":["import { useContext } from 'react'\nimport { SurveyContext } from '../../utils/context'\nimport styled from 'styled-components'\nimport colors from '../../utils/style/colors'\nimport { useFetch, useTheme } from '../../utils/hooks'\nimport { StyledLink, Loader } from '../../utils/style/Atoms'\n\nconst ResultsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 60px 90px;\n  padding: 30px;\n  background-color: ${({ theme }) =>\n    theme === 'light' ? colors.backgroundLight : colors.backgroundDark};\n`\n\nconst ResultsTitle = styled.h2`\n  color: ${({ theme }) => (theme === 'light' ? '#000000' : '#ffffff')};\n  font-weight: bold;\n  font-size: 28px;\n  max-width: 60%;\n  text-align: center;\n  & > span {\n    padding-left: 10px;\n  }\n`\n\nconst DescriptionWrapper = styled.div`\n  padding: 60px;\n`\n\nconst JobTitle = styled.span`\n  color: ${({ theme }) =>\n    theme === 'light' ? colors.primary : colors.backgroundLight};\n  text-transform: capitalize;\n`\n\nconst JobDescription = styled.div`\n  font-size: 18px;\n  & > p {\n    color: ${({ theme }) => (theme === 'light' ? colors.secondary : '#ffffff')};\n    margin-block-start: 5px;\n  }\n  & > span {\n    font-size: 20px;\n  }\n`\n\nconst LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nexport function formatQueryParams(answers) {\n  const answerNumbers = Object.keys(answers)\n\n  return answerNumbers.reduce((previousParams, answerNumber, index) => {\n    const isFirstParam = index === 0\n    const separator = isFirstParam ? '' : '&'\n    return `${previousParams}${separator}a${answerNumber}=${answers[answerNumber]}`\n  }, '')\n}\n\nexport function formatJobList(title, listLength, index) {\n  if (index === listLength - 1) {\n    return title\n  } else {\n    return `${title},`\n  }\n}\n\nfunction Results() {\n  const { theme } = useTheme()\n  const { answers } = useContext(SurveyContext)\n  const queryParams = formatQueryParams(answers)\n\n  const { data, isLoading, error } = useFetch(\n    `http://localhost:8000/results?${queryParams}`\n  )\n\n  if (error) {\n    return <span>Il y a un problème</span>\n  }\n\n  const resultsData = data?.resultsData\n\n  return isLoading ? (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  ) : (\n    <ResultsContainer theme={theme}>\n      <ResultsTitle theme={theme}>\n        Les compétences dont vous avez besoin :\n        {resultsData &&\n          resultsData.map((result, index) => (\n            <JobTitle\n              key={`result-title-${index}-${result.title}`}\n              theme={theme}\n            >\n              {formatJobList(result.title, resultsData.length, index)}\n            </JobTitle>\n          ))}\n      </ResultsTitle>\n      <StyledLink $isFullLink to=\"/freelances\">\n        Découvrez nos profils\n      </StyledLink>\n      <DescriptionWrapper>\n        {resultsData &&\n          resultsData.map((result, index) => (\n            <JobDescription\n              theme={theme}\n              key={`result-detail-${index}-${result.title}`}\n            >\n              <JobTitle theme={theme}>{result.title}</JobTitle>\n              <p>{result.description}</p>\n            </JobDescription>\n          ))}\n      </DescriptionWrapper>\n    </ResultsContainer>\n  )\n}\n\nexport default Results\n"]},"metadata":{},"sourceType":"module"}