{"ast":null,"code":"var _jsxFileName = \"/Users/guillaumepevrier/Projets/OpenclassRoom/Projet 6 - Cre\\u0301ez une application web de location immobilie\\u0300re avec React/Workflow/shiny-agency/src/utils/context/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n\n  const [theme, setTheme] = useState('light');\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeProvider, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/guillaumepevrier/Projets/OpenclassRoom/Projet 6 - Créez une application web de location immobilière avec React/Workflow/shiny-agency/src/utils/context/index.jsx"],"names":["createContext","ThemeContext","ThemeProvider","children","theme","setTheme","useState","toggleTheme"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;;AAEA,OAAO,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;AAEP,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,OAAD,CAAlC;;AACA,QAAMC,WAAW,GAAG,MAAM;AACzBF,IAAAA,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAR;AACA,GAFD;;AAIA,sBAAO,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAF;AAASG,MAAAA;AAAT,KAA9B;AAAA,cAAuDJ;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAPM;;GAAMD,a;;KAAAA,a","sourcesContent":["import { createContext } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n\tconst [theme, setTheme] = useState('light');\n\tconst toggleTheme = () => {\n\t\tsetTheme(theme === 'light' ? 'dark' : 'light');\n\t};\n\n\treturn <ThemeContext.Provider value={{ theme, toggleTheme }}>{children}</ThemeContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}